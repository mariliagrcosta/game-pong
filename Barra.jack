// PONG GAME //
 
class Barra{

    //Declaração das variáveis que serão responsáveis por armazenar as informações referentes a classe "barra";
    field int x, y; //Posição da barra (x, y);           
    field int comprimento, largura; //Comprimento e largura da barra;
    field int direcao; //Direção do movimento da barra (parado - 0, esquerda - 1, direita - 2);

    //Construtor - Constroi a barra com base nas informações dadas;
    constructor Barra new(int xBarra, int yBarra, int compBarra) { //Parâmetros;

        let x = xBarra; //Posição da barra no eixo x;
        let y = yBarra; //Posição da barra no eixo y;
        let comprimento = compBarra; //Comprimento da barra;
        let largura = 5; //Largura da barra no eixo x;
        let direcao = 0; //Direção inicial do movimento da barra (parado);
        
        do mostrar(); //Mostrar a barra x;

        return this;
    }

    //Acessor - Permite que o acesso, fora da classe, ao "x" (lado esquerdo da barra) seja possível; 
    method int getLEsquerdo() {
        return x; 
    }

    //Acessor - Permite que o acesso, fora da classe, ao "x + comprimento" (lado direito da barra) seja possível; 
    method int getLDireito() {
        return x + comprimento; 
    }

    //Método - Desenha um retângulo;
    method void desenhar() {
        do Screen.drawRectangle(x, y, x + comprimento, y + largura); //Usando a cor escolhida, desenha um retângulo preenchido;
        return;
    }
    
    //Método - "Mostra" a barra;
    method void mostrar() {
        do Screen.setColor(true); //Cor: preto;
        do desenhar(); //Desenha o retângulo preto (preenchido);
        return;
    }

    //Método - "Escode" a barra;
    method void esconder() {
        do Screen.setColor(false); //Cor: branco;
        do desenhar(); //Desenha o retângulo branco (preenchido);
        return;
    }

    //Método - Define a direção do movimento da barra (baseado no que foi pressionado no teclado)
    method void setDirecao(int tecladoInfo) {
        let direcao = tecladoInfo;
        return;
    }

    //Método - Define o tamanho da barra;
    method void setTamanho(int compBarra) {
        do esconder(); //Esconde a barra;
        let comprimento = compBarra; //Atualiza o comprimento da barra;
        do mostrar(); //Mostra a barra;
        return;
    }

    //Método - Deslocamento da barra;
    method void deslocamento() {

        //Confere se a direção é 1 (esquerda);
	    if (direcao = 1) {
            let x = x - 3; //Atualiza o valor da posição da barra;
            
            //Confere se a barra passou do limite;
            if (x < 0) {
                let x = 0; //Define o valor da posição da barra no eixo x para 0 (impossibilitanto que passe do limite);
            }

            //Apaga o fim da barra original e desenha um novo começo -> Passa a ideia de movimento;
            do Screen.setColor(false); //Escolhe o branco;
            do Screen.drawRectangle((x + comprimento) + 1, y, (x + comprimento) + 3, y + largura); //Um retângulo branco é desenhado na posição indicada -> Final da barra original é "apagado";
            do Screen.setColor(true); //Escolhe o preto;
            do Screen.drawRectangle(x, y, x + 2, y + largura); //Um retângulo preto é desenhado na posição indicada -> Novo começo da barra é pintado;
        }

        //Se a direção não é 1 (esquerda);
        else {
            //A direção é 2 (direita);
            if (direcao = 2){
                let x = x + 3; //Atualiza o valor da posição da barra;
                //Confere se a barra passou do limite;
                if ((x + comprimento) > 511) { 
                    let x = 511 - comprimento; //Define o valor da posição da barra no eixo x para 511 - comprimento da barra (impossibilitanto que passe do limite);
                }
            }
            
            //Apaga o fim da barra original e desenha um novo começo -> Passa a ideia de movimento
            do Screen.setColor(false); //Escolhe o branco;
            do Screen.drawRectangle(x - 3, y, x - 1, y + largura); //Um retângulo branco é desenhado na posição indicada -> Final da barra original é "apagado";
            do Screen.setColor(true); //Escolhe o preto;
            do Screen.drawRectangle((x + comprimento) - 2, y, x + comprimento, y + largura); //Um retângulo preto é desenhado na posição indicada -> Novo começo da barra é pintado;
        }
        return;
    }

    //Método - Encapsula a desalocação de um objeto da memória;
    method void dispose() {
        do Memory.deAlloc(this); 
        return;
    }

}